AWSTemplateFormatVersion: 2010-09-09
Description: "Automatic timed shutdown of EKS CI/CD cluster"
Parameters:
  StackNames:
    Type: String
    Description: Comma-separated list of stack name that will be deleted in the provided order.
Resources:
  TimedShutdownRule:
    Type: "AWS::Events::Rule"
    Properties:
      Description: "Shutdown EKS CI/CD cluster at specified time"
      ScheduleExpression: "cron(0 3 * * ? *)"
      Targets:
        -
          Arn: !GetAtt DeleteCFNLambda.Arn
          Id: 'DeleteCFNLambda'
  DeleteCFNLambda:
    Type: "AWS::Lambda::Function"
    DependsOn:
      - DeleteCFNLambdaExecutionRole
    Properties:
      FunctionName: "DeleteCFNStacksLambda"
      Code:
        ZipFile: |
          import boto3
          import os
          import json

          stack_names = os.environ['StackNames'].split(", ")

          def delete_cfn(stack_names):
              try:
                  cfn = boto3.resource('cloudformation')
                  for stack_name in stack_names:
                      print("Deleting stack " + stack_name)
                      stack = cfn.Stack(stack_name)
                      stack.delete()
                  return "SUCCESS"
              except:
                  return "ERROR"

          def handler(event, context):
              print("Received event:")
              print(json.dumps(event))
              return delete_cfn(stack_names)
      Environment:
        Variables:
          StackNames: !Ref 'StackNames'
      Handler: "index.handler"
      Runtime: "python3.7"
      Timeout: "5"
      Role: !GetAtt DeleteCFNLambdaExecutionRole.Arn
  PermissionForDeleteCFNLambda:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:DeleteCFNStacksLambda"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt TimedShutdownRule.Arn
  DeleteCFNLambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "lambda_policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"
              - Effect: "Allow"
                Action:
                  - "cloudformation:DeleteStack"
                Resource: !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/*"
              - Effect: "Allow"
                Action:
                  - "ec2:De*"
                  - "ec2:Dis*"
                  - "ec2:Re*"
                  - "iam:De*"
                  - "eks:De*"
                  - "elasticfilesystem:De*"
                Resource: "*"
