apiVersion: v1
kind: Service
metadata:
  name: "{{eks_cache_cluster_name}}-service"
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
spec:
  selector:
    app: "{{k8s_cache_cluster_namespace}}"
    tier: "{{eks_cache_cluster_name}}"
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5071
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: efs-pv
spec:
  capacity:
    storage: 20Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: efs-sc
  csi:
    driver: efs.csi.aws.com
    volumeHandle: "{{efs_cache_mount_id}}"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: efs-pvc
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  storageClassName: efs-sc
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{eks_cache_cluster_name}}-deployment"
spec:
  selector:
    matchLabels:
      app: "{{k8s_cache_cluster_namespace}}"
      tier: "{{eks_cache_cluster_name}}"
  serviceName: "{{k8s_cache_cluster_namespace}}"
  replicas: 1
  template:
    metadata:
      labels:
        app: "{{k8s_cache_cluster_namespace}}"
        tier: "{{eks_cache_cluster_name}}"
    spec:
      containers:
        - name: gradle-build-cache
          image: gradle/build-cache-node:9.5
          ports:
            - containerPort: 5071
              protocol: TCP
          volumeMounts:
            - name: "{{k8s_cache_cluster_volume_name}}"
              mountPath: /data
      volumes:
        - name: "{{k8s_cache_cluster_volume_name}}"
          persistentVolumeClaim:
            claimName: efs-pvc