AWSTemplateFormatVersion: 2010-09-09
Description: "CodeBuild project for loading code from GitHub to S3 on PR events"
Parameters:
  Build:
    Type: String
    AllowedValues:
      - "{{build_pr_suffix}}"
      - "{{build_ci_suffix}}"
    Description: "Type of build, {{build_pr_suffix}} or {{build_ci_suffix}}"
Mappings:
  ByBuildType:
    "{{build_ci_suffix}}":
      Pattern: PUSH
      TargetType: HEAD_REF
      BucketName: "{{source_artifact_bucket_name}}-{{build_ci_suffix | lower}}"
    "{{build_pr_suffix}}":
      Pattern: PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED, PULL_REQUEST_REOPENED
      TargetType: BASE_REF
      BucketName: "{{source_artifact_bucket_name}}-{{build_pr_suffix | lower}}"
Resources:
  CodeBuildPr:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        ArtifactIdentifier: !Sub "Sources for ${Build} builds"
        EncryptionDisabled: false
        Packaging: NONE
        Location: !Ref S3OutputBucket
        Name: "/"
        Type: S3
      Description: !Sub "${Build} build trigger"
      Environment:
        ComputeType: "{{codebuild_compute_type}}"
        Image: "{{codebuild_image}}"
        Type: LINUX_CONTAINER
      Name: !Sub "{{project_name}}-{{build_name_trigger}}-${Build}"
      ServiceRole: "{{codebuild_role_arn}}"
      Source:
        ReportBuildStatus: true
        BuildStatusConfig:
          Context: pr-trigger
        BuildSpec: !Sub |
          version: 0.2
          phases:
            build:
              commands:
                - echo export BUILD_TAG=${Build}_v`date +%F`_`cat .git/HEAD | cut -c -6` > build_tag_source.sh
                - zip -r {{source_artifact_key}} .
          artifacts:
            files:
              - {{source_artifact_key}}
        Type: GITHUB
        Location: https://github.com/romanastr/base-gradle-cicd
      Triggers:
        FilterGroups:
          -
            - Type: EVENT
              Pattern: !FindInMap [ByBuildType, !Ref Build, Pattern]
            - Type: !FindInMap [ByBuildType, !Ref Build, TargetType]
              Pattern: master
        Webhook: true
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Sub "/aws/codebuild/{{project_name}}-{{build_name_trigger}}-${Build}"
          Status: ENABLED
  S3OutputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !FindInMap [ByBuildType, !Ref Build, BucketName]
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - Id: TransitionRule
            Status: Enabled
            ExpirationInDays: "{{audit_expiration_days}}"
            Transitions:
              - TransitionInDays: "{{audit_infrequent_transition_days}}"
                StorageClass: STANDARD_IA
          - Id: NoncurrentVersionTransitionRule
            Status: Enabled
            NoncurrentVersionExpirationInDays: "{{audit_expiration_days}}"
            NoncurrentVersionTransitions:
              - TransitionInDays: "{{audit_infrequent_transition_days}}"
                StorageClass: STANDARD_IA
      VersioningConfiguration:
        Status: Enabled
  LogsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/codebuild/{{project_name}}-{{build_name_trigger}}-${Build}"
      RetentionInDays: "{{audit_expiration_days}}"