AWSTemplateFormatVersion: 2010-09-09
Description: "CodePipeline project"
Parameters:
  Build:
    Type: String
    AllowedValues:
      - "{{build_pr_suffix}}"
      - "{{build_ci_suffix}}"
    Description: "Type of build, PR or CI"
Mappings:
  ByBuildType:
    "{{build_ci_suffix}}":
      BucketName: "{{source_artifact_bucket_name}}-{{build_ci_suffix | lower}}"
    "{{build_pr_suffix}}":
      BucketName: "{{source_artifact_bucket_name}}-{{build_pr_suffix | lower}}"
Resources:
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "{{project_name}}-Pipeline-${Build}"
      RoleArn: "{{codepipeline_role_arn}}"
      Stages:
        -
          Name: Source
          Actions:
            - Name: S3SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: 1
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                S3Bucket: !FindInMap [ByBuildType, !Ref Build, BucketName]
                S3ObjectKey: "{{source_artifact_key}}"
              RunOrder: 1
        -
          Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref CodeBuildBuild
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1
            - Name: BuildStatus
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref CodeBuildStatus
#                EnvironmentVariables: '[{"name":"TEST_VARIABLE","value":"TEST_VALUE","type":"PLAINTEXT"},{"name":"ParamStoreTest","value":"PARAMETER_NAME","type":"PARAMETER_STORE"}]'
              InputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
        -
          Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref CodeBuildDeploy
              InputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
      #            - Name: DeployStatus
      #              ActionTypeId:
      #                Category: Build
      #                Owner: AWS
      #                Provider: CodeBuild
      #                Version: 1
      #              Configuration:
      #                ProjectName: !Ref CodeBuildStatus
      #                EnvironmentVariables: '[{"name":"TEST_VARIABLE","value":"TEST_VALUE","type":"PLAINTEXT"},{"name":"ParamStoreTest","value":"PARAMETER_NAME","type":"PARAMETER_STORE"}]'
      #              InputArtifacts:
      #                - Name: SourceArtifact
      #              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineArtifactStoreBucket
  CodePipelineArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - Id: TransitionRule
            Status: Enabled
            ExpirationInDays: "{{audit_expiration_days}}"
            Transitions:
              - TransitionInDays: "{{audit_infrequent_transition_days}}"
                StorageClass: STANDARD_IA
  CodeBuildBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: !Sub "Main ${Build} Build"
      Environment:
        ComputeType: "{{codebuild_compute_type}}"
        Image: "{{codebuild_image}}"
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: BUILD_CACHE_HOST
            Value: "{{cache_node_host_ssm_parameter}}"
            Type: PARAMETER_STORE
          - Name: BUILD
            Value: !Ref Build
            Type: PLAINTEXT
      Name: !Sub "{{project_name}}-{{build_name_main}}-${Build}"
      ServiceRole: "{{codebuild_role_arn}}"
      Source:
        Type: CODEPIPELINE
        BuildSpec: operations/cicd/builds/roles/pipelines/files/buildspec-build.yml
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Sub "/aws/codebuild/{{project_name}}-{{build_name_main}}-${Build}"
          Status: ENABLED
  CodeBuildDeploy:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: !Sub "Main ${Build} Deploy"
      Environment:
        ComputeType: "{{codebuild_compute_type}}"
        Image: "{{codebuild_image}}"
        Type: LINUX_CONTAINER
      Name: !Sub "{{project_name}}-{{build_name_deploy}}-${Build}"
      ServiceRole: "{{codebuild_role_arn}}"
      Source:
        Type: CODEPIPELINE
        BuildSpec: operations/cicd/builds/roles/pipelines/files/buildspec-deploy.yml
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Sub "/aws/codebuild/{{project_name}}-{{build_name_deploy}}-${Build}"
          Status: ENABLED
  LogsLogGroupMain:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/codebuild/{{project_name}}-{{build_name_main}}-${Build}"
      RetentionInDays: "{{audit_expiration_days}}"
  CodeBuildStatus:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: !Sub "Reporting Build status for ${Build}"
      Environment:
        ComputeType: "{{codebuild_compute_type}}"
        Image: "{{codebuild_image}}"
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: GITHUB_TOKEN
            Value: "{{github_token_ssm_parameter}}"
            Type: PARAMETER_STORE
      Name: !Sub "{{project_name}}-{{build_name_status}}-${Build}"
      ServiceRole: "{{codebuild_role_arn}}"
      Source:
        Type: CODEPIPELINE
        BuildSpec: operations/cicd/builds/roles/pipelines/files/buildspec-build-status.yml
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Sub "/aws/codebuild/{{project_name}}-{{build_name_status}}-${Build}"
          Status: ENABLED
  LogsLogGroupStatus:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/codebuild/{{project_name}}-{{build_name_status}}-${Build}"
      RetentionInDays: "{{audit_expiration_days}}"